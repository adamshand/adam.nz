#!/bin/bash

PROJECT="${HOME}/src/adam.nz"
echo "Updating TODO.md ..."

(
  echo "# Todo List"
  echo
  echo "Automatically generated by \`.husky/update-todos.sh\` from any file tagged wtih **TODO** or **FIXME**."

  grep -Ern '(TODO|FIXME)' "${PROJECT}/src" | grep -v TODO.md | awk -F':' '{
    github_base_url = "https://github.com/adamshand/adam.nz/blob/main/src";
    # Transform the local file path into a relative GitHub path and markdown link
    gsub("/Users/adam/src/adam.nz/src/", "", $1); 
    if (prev_file != $1) {
      printf "\n## [%s](%s/%s)\n", $1, github_base_url, $1; # Print the markdown link
      prev_file = $1;
    }
    comment = "";
    for (i = 3; i <= NF; i++) {
      comment = comment $i (i < NF ? ":" : ""); # Reconstruct the comment
    }
    start_index = match(comment, /(TODO|FIXME)/); # Find TODO/FIXME start
    comment_substr = substr(comment, start_index); # Extract from TODO/FIXME onwards
    gsub(/-->$/, "", comment_substr); # Remove trailing -->
    print "  - [ ] " comment_substr; # Print the comment
  }' 
) > "${PROJECT}/TODO.md"

# Only proceed with git operations if there are changes
if [[ `git status --porcelain "${PROJECT}/TODO.md"` ]]; then
  git add "${PROJECT}/TODO.md"

  # Check if we're actually committing any changes to avoid an empty commit
  if ! git diff --cached --exit-code --quiet; then
    git commit -m 'Update TODO.md' "${PROJECT}/TODO.md"
  else
    echo "No changes to commit for TODO.md."
  fi
else
  echo "TODO.md not modified."
fi
